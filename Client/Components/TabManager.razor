<div class="tabs-wrapper">
    <ul class="nav nav-tabs">
        @for (var i = 0; i < Tabs.Count; i++)
        {
            var tab = Tabs[i];
            var activeClass = i == ActiveIndex ? "active" : string.Empty;

            var currentIndex = i;
            <li class="nav-item tab" @onclick="@(() => ActivateTabAsync(currentIndex))">
                <a class="nav-link @activeClass tab-name" title="@tab">
                    <span class="tab-name-wrapper">@tab</span>
                    @if (currentIndex != DefaultActiveIndex)
                    {
                        <span class="close-tab" @onclick="@(() => CloseTabAsync(currentIndex))" @onclick:preventDefault>&times;</span>
                    }
                </a>
            </li>
        }
        @if (tabCreating)
        {
            <li class="nav-item">
                <a class="nav-link tab-input">
                    <input id="new-tab-input" @bind="@newTab" @bind:event="oninput" @onblur="@CreateTabAsync" @onkeydown="@OnKeyDownAsync"/>
                </a>
            </li>
        }

        <li class="nav-item" @onclick="@InitTabCreating">
            <a class="nav-link">
                <span class="icon-plus"></span>
            </a>
        </li>
    </ul>
</div>
